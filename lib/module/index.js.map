{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useRef","useState","View","Text","ScrollView","StyleSheet","Dimensions","TouchableOpacity","LinearGradient","Index","value","onChange","height","width","fontSize","textColor","startYear","endYear","markColor","markHeight","markWidth","fadeColor","days","setDays","months","setMonths","years","setYears","end","Date","getFullYear","start","Array","map","_","index","pickerHeight","Math","round","get","pickerWidth","unexpectedDate","changeHandle","type","digit","date","setDate","setMonth","setFullYear","styles","picker","el","getDate","getMonth","DateBlock","digits","dHeight","mHeight","min","mWidth","fadeFilled","hex2rgba","fadeTransparent","scrollRef","current","scrollTo","y","animated","handleChange","nativeEvent","contentOffset","Number","isInteger","block","mark","top","backgroundColor","scroll","color","marginBottom","length","marginTop","lineHeight","gradient","bottom","hex","alpha","replace","r","parseInt","slice","repeat","g","b","create","flexDirection","flex","alignItems","justifyContent","textAlign","position","borderRadius"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {View, Text, ScrollView, StyleSheet, Dimensions, TouchableOpacity} from \"react-native\";\r\n\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nconst Index: React.FC<DatePickerProps> = ({\r\n    value,\r\n    onChange,\r\n    height,\r\n    width,\r\n    fontSize,\r\n    textColor,\r\n    startYear,\r\n    endYear,\r\n    markColor,\r\n    markHeight,\r\n    markWidth,\r\n    fadeColor\r\n}) => {\r\n    const [days, setDays] = useState<number[]>([]);\r\n    const [months, setMonths] = useState<number[]>([]);\r\n    const [years, setYears] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n        const end = endYear || new Date().getFullYear();\r\n        const start = !startYear || startYear > end ? (end - 100) : startYear;\r\n\r\n        setDays([...Array(31)].map((_, index) => index + 1));\r\n        setMonths([...Array(12)].map((_, index) => index + 1));\r\n        setYears([...Array(end - start + 1)].map((_, index) => start + index));\r\n    }, []);\r\n\r\n    const pickerHeight: number = Math.round(height || Dimensions.get(\"window\").height / 3.5);\r\n    const pickerWidth: number | string = width || \"100%\";\r\n    const unexpectedDate: Date = new Date(years[0], 0, 1);\r\n\r\n    const changeHandle = (type: string, digit: number) : void => {\r\n        const date = new Date(value || unexpectedDate);\r\n\r\n        switch (type) {\r\n            case \"day\":\r\n                date.setDate(digit);\r\n                break;\r\n            case \"month\":\r\n                date.setMonth(digit - 1);\r\n                break;\r\n            case \"year\":\r\n                date.setFullYear(digit);\r\n                break;\r\n        }\r\n\r\n        onChange(date);\r\n    }\r\n\r\n    return (\r\n        <View style={[styles.picker, { height: pickerHeight, width: pickerWidth }]}>\r\n        {\r\n            [days, months, years].map((el, index) => {\r\n                const date = new Date(value || unexpectedDate);\r\n\r\n                return (\r\n                    <DateBlock\r\n                        digits={el}\r\n                        value={\r\n                            index === 0\r\n                            ? date.getDate()\r\n                            : index === 1\r\n                            ? date.getMonth() + 1\r\n                            : date.getFullYear()\r\n                        }\r\n                        onChange={changeHandle}\r\n                        height={pickerHeight}\r\n                        fontSize={fontSize}\r\n                        textColor={textColor}\r\n                        markColor={markColor}\r\n                        markHeight={markHeight}\r\n                        markWidth={markWidth}\r\n                        fadeColor={fadeColor}\r\n                        type={[\"day\", \"month\", \"year\"][index]}\r\n                        key={index}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        </View>\r\n    );\r\n};\r\n\r\nconst DateBlock: React.FC<DateBlockProps> = ({\r\n    value,\r\n    digits,\r\n    type,\r\n    onChange,\r\n    height,\r\n    fontSize,\r\n    textColor,\r\n    markColor,\r\n    markHeight,\r\n    markWidth,\r\n    fadeColor,\r\n}) => {\r\n    const dHeight: number = Math.round(height / 4);\r\n\r\n    const mHeight: number = markHeight || Math.min(dHeight, 65);\r\n    const mWidth: number | string = markWidth || \"70%\";\r\n\r\n    const fadeFilled: string = hex2rgba(fadeColor || \"#ffffff\", 1);\r\n    const fadeTransparent: string = hex2rgba(fadeColor || \"#ffffff\", 0);\r\n\r\n    const scrollRef = useRef(null);\r\n    //\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        scrollRef.current.scrollTo({\r\n            y: dHeight * (value - digits[0]),\r\n            animated: true\r\n        })\r\n    }, [scrollRef.current])\r\n\r\n    const handleChange = ({nativeEvent}: any) => {\r\n        const digit = nativeEvent.contentOffset.y / dHeight + digits[0];\r\n\r\n        if (Number.isInteger(digit)) {\r\n            onChange(type, digit);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.block}>\r\n            <View\r\n                style={[\r\n                    styles.mark,\r\n                    {\r\n                        top: (height - mHeight) / 2,\r\n                        backgroundColor: markColor || \"rgba(0, 0, 0, 0.05)\",\r\n                        height: mHeight,\r\n                        width: mWidth,\r\n                    }\r\n                ]}\r\n            />\r\n            <ScrollView\r\n                ref={scrollRef}\r\n                style={styles.scroll}\r\n                snapToInterval={dHeight}\r\n                showsVerticalScrollIndicator={false}\r\n                scrollEventThrottle={0}\r\n                onScroll={handleChange}\r\n            >\r\n                {digits.map((value: number, index: number) => {\r\n                    return (\r\n                        <TouchableOpacity\r\n                            key={index}\r\n                            onPress={() => {\r\n                                // @ts-ignore\r\n                                scrollRef.current.scrollTo({\r\n                                    y: dHeight * index,\r\n                                    animated: true\r\n                                })\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={[\r\n                                    styles.digit,\r\n                                    {\r\n                                        fontSize: fontSize || 22,\r\n                                        color: textColor || \"#000000\",\r\n                                        marginBottom: (index === digits.length - 1)\r\n                                            ? height / 2 - dHeight / 2\r\n                                            : 0,\r\n                                        marginTop: (index === 0)\r\n                                            ? height / 2 - dHeight / 2\r\n                                            : 0,\r\n                                        lineHeight: dHeight,\r\n                                        height: dHeight,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                {value}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )\r\n                })}\r\n            </ScrollView>\r\n            <LinearGradient\r\n                style={[styles.gradient, {bottom: 0, height: height / 4}]}\r\n                colors={[fadeTransparent, fadeFilled]}\r\n                pointerEvents={\"none\"}\r\n            />\r\n            <LinearGradient\r\n                style={[styles.gradient, {top: 0, height: height / 4}]}\r\n                colors={[fadeFilled, fadeTransparent]}\r\n                pointerEvents={\"none\"}\r\n            />\r\n        </View>\r\n    )\r\n};\r\n\r\nconst hex2rgba = (hex: string, alpha: number) : string => {\r\n    hex = hex.replace(\"#\", \"\");\r\n\r\n    const r: number = parseInt(hex.length === 3 ? hex.slice(0, 1).repeat(2) : hex.slice(0, 2), 16);\r\n    const g: number = parseInt(hex.length === 3 ? hex.slice(1, 2).repeat(2) : hex.slice(2, 4), 16);\r\n    const b: number = parseInt(hex.length === 3 ? hex.slice(2, 3).repeat(2) : hex.slice(4, 6), 16);\r\n\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    picker: {\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n    },\r\n    block: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    scroll: {\r\n        width: \"100%\",\r\n    },\r\n    digit: {\r\n        fontSize: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    mark: {\r\n        position: \"absolute\",\r\n        borderRadius: 10,\r\n    },\r\n    gradient: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nexport interface DatePickerProps {\r\n    value: Date | null | undefined;\r\n    height?: number;\r\n    width?: number | string;\r\n    fontSize?: number;\r\n    textColor?: string;\r\n    startYear?: number;\r\n    endYear?: number;\r\n    markColor?: string;\r\n    markHeight?: number;\r\n    markWidth?: number | string;\r\n    fadeColor?: string;\r\n    onChange (value: Date): void;\r\n}\r\n\r\nexport interface DateBlockProps {\r\n    onChange(type: string, digit: number): void;\r\n    digits: number[];\r\n    value: number;\r\n    type: string;\r\n    height: number;\r\n    fontSize?: number;\r\n    textColor?: string;\r\n    markColor?: string\r\n    markHeight?: number;\r\n    markWidth?: number | string;\r\n    fadeColor?: string;\r\n}\r\n\r\nexport default Index;\r\n"]}