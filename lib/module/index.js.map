{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useRef","useState","View","Text","ScrollView","StyleSheet","Dimensions","TouchableOpacity","LinearGradient","DatePicker","value","onChange","height","width","fontSize","textColor","startYear","endYear","markColor","markHeight","markWidth","fadeColor","format","days","setDays","months","setMonths","years","setYears","end","Date","getFullYear","start","_days","Array","map","_","index","_months","_years","pickerHeight","Math","round","get","pickerWidth","unexpectedDate","date","changeHandle","type","digit","setDate","setMonth","setFullYear","getOrder","split","name","digits","getDate","getMonth","console","warn","styles","picker","el","DateBlock","dHeight","mHeight","min","mWidth","fadeFilled","hex2rgba","fadeTransparent","scrollRef","current","scrollTo","y","animated","handleChange","nativeEvent","contentOffset","Number","isInteger","block","mark","top","backgroundColor","scroll","color","marginBottom","length","marginTop","lineHeight","gradient","bottom","hex","alpha","replace","r","parseInt","slice","repeat","g","b","create","flexDirection","flex","alignItems","justifyContent","textAlign","position","borderRadius"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {View, Text, ScrollView, StyleSheet, Dimensions, TouchableOpacity} from \"react-native\";\r\n\r\nimport {LinearGradient} from \"react-native-linear-gradient\";\r\n\r\nconst DatePicker: React.FC<DatePickerProps> = ({\r\n    value,\r\n    onChange,\r\n    height,\r\n    width,\r\n    fontSize,\r\n    textColor,\r\n    startYear,\r\n    endYear,\r\n    markColor,\r\n    markHeight,\r\n    markWidth,\r\n    fadeColor,\r\n    format\r\n}) => {\r\n    const [days, setDays] = useState<number[]>([]);\r\n    const [months, setMonths] = useState<number[]>([]);\r\n    const [years, setYears] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n        const end = endYear || new Date().getFullYear();\r\n        const start = !startYear || startYear > end ? (end - 100) : startYear;\r\n\r\n        const _days = [...Array(31)].map((_, index) => index + 1);\r\n        const _months = [...Array(12)].map((_, index) => index + 1);\r\n        const _years = [...Array(end - start + 1)].map((_, index) => start + index);\r\n\r\n        setDays(_days);\r\n        setMonths(_months);\r\n        setYears(_years);\r\n    }, []);\r\n\r\n    const pickerHeight: number = Math.round(height || Dimensions.get(\"window\").height / 3.5);\r\n    const pickerWidth: number | string = width || \"100%\";\r\n\r\n    const unexpectedDate: Date = new Date(years[0], 0, 1);\r\n    const date = new Date(value || unexpectedDate);\r\n\r\n    const changeHandle = (type: string, digit: number): void => {\r\n        switch (type) {\r\n            case \"day\":\r\n                date.setDate(digit);\r\n                break;\r\n            case \"month\":\r\n                date.setMonth(digit - 1);\r\n                break;\r\n            case \"year\":\r\n                date.setFullYear(digit);\r\n                break;\r\n        }\r\n\r\n        onChange(date);\r\n    }\r\n\r\n    const getOrder = () => {\r\n        return (format || \"dd-mm-yyyy\").split(\"-\").map((type, index) => {\r\n            switch (type) {\r\n                case \"dd\":\r\n                    return {name: \"day\", digits: days, value: date.getDate()};\r\n                case \"mm\":\r\n                    return {name: \"month\", digits: months, value: date.getMonth() + 1};\r\n                case \"yyyy\":\r\n                    return {name: \"year\", digits: years, value: date.getFullYear()};\r\n                default:\r\n                    console.warn(`Invalid date picker format prop: found \"${type}\" in ${format}. Please read documentation!`)\r\n                    return {\r\n                        name: [\"day\", \"month\", \"year\"][index],\r\n                        digits: [days, months, years][index],\r\n                        value: [date.getDate(), date.getMonth() + 1, date.getFullYear()][index]\r\n                    };\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <View style={[styles.picker, {height: pickerHeight, width: pickerWidth}]}>\r\n            {\r\n                getOrder().map((el, index) => {\r\n                    return (\r\n                        <DateBlock\r\n                            digits={el.digits}\r\n                            value={el.value}\r\n                            onChange={changeHandle}\r\n                            height={pickerHeight}\r\n                            fontSize={fontSize}\r\n                            textColor={textColor}\r\n                            markColor={markColor}\r\n                            markHeight={markHeight}\r\n                            markWidth={markWidth}\r\n                            fadeColor={fadeColor}\r\n                            type={el.name}\r\n                            key={index}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </View>\r\n    );\r\n};\r\n\r\nconst DateBlock: React.FC<DateBlockProps> = ({\r\n    value,\r\n    digits,\r\n    type,\r\n    onChange,\r\n    height,\r\n    fontSize,\r\n    textColor,\r\n    markColor,\r\n    markHeight,\r\n    markWidth,\r\n    fadeColor,\r\n}) => {\r\n    const dHeight: number = Math.round(height / 4);\r\n\r\n    const mHeight: number = markHeight || Math.min(dHeight, 65);\r\n    const mWidth: number | string = markWidth || \"70%\";\r\n\r\n    const fadeFilled: string = hex2rgba(fadeColor || \"#ffffff\", 1);\r\n    const fadeTransparent: string = hex2rgba(fadeColor || \"#ffffff\", 0);\r\n\r\n    const scrollRef = useRef(null);\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        scrollRef.current.scrollTo({\r\n            y: dHeight * (value - digits[0]),\r\n            animated: true\r\n        })\r\n    }, [scrollRef.current])\r\n\r\n    const handleChange = ({nativeEvent}: any) => {\r\n        const digit = nativeEvent.contentOffset.y / dHeight + digits[0];\r\n\r\n        if (Number.isInteger(digit)) {\r\n            onChange(type, digit);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.block}>\r\n            <View\r\n                style={[\r\n                    styles.mark,\r\n                    {\r\n                        top: (height - mHeight) / 2,\r\n                        backgroundColor: markColor || \"rgba(0, 0, 0, 0.05)\",\r\n                        height: mHeight,\r\n                        width: mWidth,\r\n                    }\r\n                ]}\r\n            />\r\n            <ScrollView\r\n                ref={scrollRef}\r\n                style={styles.scroll}\r\n                snapToInterval={dHeight}\r\n                showsVerticalScrollIndicator={false}\r\n                scrollEventThrottle={0}\r\n                onScroll={handleChange}\r\n            >\r\n                {digits.map((value: number, index: number) => {\r\n                    return (\r\n                        <TouchableOpacity\r\n                            key={index}\r\n                            onPress={() => {\r\n                                // @ts-ignore\r\n                                scrollRef.current.scrollTo({\r\n                                    y: dHeight * index,\r\n                                    animated: true\r\n                                })\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={[\r\n                                    styles.digit,\r\n                                    {\r\n                                        fontSize: fontSize || 22,\r\n                                        color: textColor || \"#000000\",\r\n                                        marginBottom: (index === digits.length - 1)\r\n                                            ? height / 2 - dHeight / 2\r\n                                            : 0,\r\n                                        marginTop: (index === 0)\r\n                                            ? height / 2 - dHeight / 2\r\n                                            : 0,\r\n                                        lineHeight: dHeight,\r\n                                        height: dHeight,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                {value}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )\r\n                })}\r\n            </ScrollView>\r\n            <LinearGradient\r\n                style={[styles.gradient, {bottom: 0, height: height / 4}]}\r\n                colors={[fadeTransparent, fadeFilled]}\r\n                pointerEvents={\"none\"}\r\n            />\r\n            <LinearGradient\r\n                style={[styles.gradient, {top: 0, height: height / 4}]}\r\n                colors={[fadeFilled, fadeTransparent]}\r\n                pointerEvents={\"none\"}\r\n            />\r\n        </View>\r\n    )\r\n};\r\n\r\nconst hex2rgba = (hex: string, alpha: number): string => {\r\n    hex = hex.replace(\"#\", \"\");\r\n\r\n    const r: number = parseInt(hex.length === 3 ? hex.slice(0, 1).repeat(2) : hex.slice(0, 2), 16);\r\n    const g: number = parseInt(hex.length === 3 ? hex.slice(1, 2).repeat(2) : hex.slice(2, 4), 16);\r\n    const b: number = parseInt(hex.length === 3 ? hex.slice(2, 3).repeat(2) : hex.slice(4, 6), 16);\r\n\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    picker: {\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n    },\r\n    block: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    scroll: {\r\n        width: \"100%\",\r\n    },\r\n    digit: {\r\n        fontSize: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    mark: {\r\n        position: \"absolute\",\r\n        borderRadius: 10,\r\n    },\r\n    gradient: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nexport interface DatePickerProps {\r\n    value: Date | null | undefined;\r\n    height?: number;\r\n    width?: number | string;\r\n    fontSize?: number;\r\n    textColor?: string;\r\n    startYear?: number;\r\n    endYear?: number;\r\n    markColor?: string;\r\n    markHeight?: number;\r\n    markWidth?: number | string;\r\n    fadeColor?: string;\r\n    format?: string;\r\n\r\n    onChange(value: Date): void;\r\n}\r\n\r\nexport interface DateBlockProps {\r\n    digits: number[];\r\n    value: number;\r\n    type: string;\r\n    height: number;\r\n    fontSize?: number;\r\n    textColor?: string;\r\n    markColor?: string\r\n    markHeight?: number;\r\n    markWidth?: number | string;\r\n    fadeColor?: string;\r\n\r\n    onChange(type: string, digit: number): void;\r\n}\r\n\r\nexport default DatePicker;\r\n"]}